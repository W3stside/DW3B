if: (branch = develop) OR (branch = master) OR (type = pull_request) OR (tag IS present)
language: node_js
node_js:
  - 'stable'
cache: 'yarn'
before_install:
  # Needed to deploy pull request and releases
  - sudo apt-get update
  - sudo apt-get -y install python-pip python-dev
  - pip install awscli --upgrade --user
script:
  - yarn test
  - yarn build
before_deploy:
  # zip ./dist folder if tag IS present
  - if [[ $TRAVIS_TAG != "" && $IPFS_HASH = "" ]]; then
      pushd dist;
      zip -r  $OLDPWD/web_$TRAVIS_TAG.zip *;
      popd;
      npm install -g ipfs;
      jsipfs init;
      jsipfs daemon & sleep 10;
      export IPFS_HASH=$(jsipfs add dist/ -r --only-hash --quiet | tail -1);
      echo "IPFS hash $IPFS_HASH";
      jsipfs shutdown;
      echo $IPFS_HASH > ipfs_hash.txt;
    fi
  # compile RELEASE_NOTES.md
  - if [[ $TRAVIS_TAG != "" && ! -f RELEASE_NOTES.md  ]]; then
      LAST_RELEASE_TAG=$(curl https://api.github.com/repos/$TRAVIS_REPO_SLUG/releases/latest 2>/dev/null | jq .tag_name | sed 's/"//g');
      echo -e "IPFS hash $IPFS_HASH\n" > RELEASE_NOTES.md;
      echo "Commits since $LAST_RELEASE_TAG:" >> RELEASE_NOTES.md;
      git log $LAST_RELEASE_TAG.. --oneline --decorate=0 | sed 's/^/- /' >> RELEASE_NOTES.md;
      echo "RELEASE_NOTES file contains:";
      cat RELEASE_NOTES.md;
    fi
after_success:
  # Pull Request - Deploy it to a review environment
  # Travis doesn't do deploy step with pull requests builds
  - ./travis/deploy_pull_request.sh
  # Releases (tagged commits) - Deploy it to a release environment
  - ./travis/deploy_release.sh

deploy:
  # Develop environment
  - provider: s3
    bucket: $DEV_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: build
    on:
      branch: develop

  # Staging environment
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: build
    upload-dir: current
    on:
      branch: master

  # Prepare production deployment
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    access_key_id: $AWS_ACCESS_KEY_ID
    skip_cleanup: true
    local_dir: build
    upload-dir: releases/$TRAVIS_TAG
    on:
      tags: true

  - provider: script
    script: ./travis/prepare_production_deployment.sh
    on:
      tags: true

  # add release_v*.zip file to tagged Releases on github
  - provider: releases
    api_key: $GITHUB_RELEASE_TAG_API_TOKEN
    release_notes_file: RELEASE_NOTES.md
    file: 
      - web_$TRAVIS_TAG.zip
      - ipfs_hash.txt
    skip_cleanup: true
    on:
      tags: true
    edge: true
